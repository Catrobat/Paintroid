/**
 *  Paintroid: An image manipulation application for Android.
 *  Copyright (C) 2010-2015 The Catrobat Team
 *  (<http://developer.catrobat.org/credits>)
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.library'
apply plugin: 'jacoco-android'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'com.novoda.bintray-release'

apply from: 'gradle/adb_tasks.gradle'
apply from: 'gradle/code_quality_tasks.gradle'

check.dependsOn 'checkstyle'
check.dependsOn 'pmd'

jacoco {
    toolVersion = "0.8.1"
}

jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled true
    xml.enabled true
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        versionCode rootProject.ext.androidVersionCode
        versionName rootProject.ext.androidVersionName
        externalNativeBuild.cmake.cppFlags "-fvisibility=hidden"
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        multiDexEnabled true
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
        debug {
            testCoverageEnabled = project.hasProperty('enableCoverage')
        }
    }

    externalNativeBuild.cmake.path 'src/main/cpp/CMakeLists.txt'

    lintOptions {
        // specific ignores should be defined via lint.xml file
        lintConfig file('config/lint.xml')
        ignore 'ClickableViewAccessibility', 'ContentDescription',
                'StaticFieldLeak', 'GradleDependency', 'OldTargetApi'

        textReport true
        xmlReport true
        htmlReport true
        xmlOutput file("build/reports/lint-report.xml")
        htmlOutput file("build/reports/lint-report.html")
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.11.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.18.3'

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'org.mockito:mockito-android:2.18.3'

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'

    pmd 'net.sourceforge.pmd:pmd-core:5.8.1'
    pmd 'net.sourceforge.pmd:pmd-java:5.8.1'

    checkstyle 'com.puppycrawl.tools:checkstyle:7.6'
}

tasks.withType(Javadoc).all {
    enabled = false
}

publish {
    userOrg = 'catrobat'
    repoName = 'Paintroid'
    groupId = 'org.catrobat.paintroid'
    artifactId = 'paintroid'
    publishVersion = rootProject.ext.androidVersionName
    licences = ['AGPL-V3']
    desc = 'A graphical paint editor library for Android'
    website = 'https://github.com/Catrobat/Paintroid'
}

if (project.hasProperty('jenkins')) {
    android.dexOptions.preDexLibraries = false
}
